{"mappings":"iiBAEA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAMtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAEpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAEpBA,E,IAbPR,EAAKiB,iBAAiB,UAiBtB,SAAsBC,GAEtB,GADEA,EAAEC,iBACAhB,EAAMiB,OAAS,GAAKhB,EAAKgB,OAAS,GAAKf,EAAOe,OAAS,EACvD,OAAOC,EAAAvB,GAASwB,OAAOC,QACrB,oCACA,aAMJ,IAFA,IAAIC,EAAYC,OAAOtB,EAAMiB,OAEpBM,EAAI,EAAGA,GAAKrB,EAAOe,MAAOM,GAAK,EAAG,CAGzCpB,EAFSoB,EAESF,GACfG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALZ,MACjBK,EAAAvB,GAASgC,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANH,EAAM,M,IAGjDI,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAU2B,EAAKN,EAALZ,MAClBK,EAAAvB,GAASgC,OAAOK,QACd,sBAAqCH,OAAfzB,EAAS,QAAYyB,OAANE,EAAM,M,IAIjDV,GAAaC,OAAOrB,EAAKgB,M,CAG3BF,EAAEkB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["//^ Add imports\n//* Add library for displaying messages to the user \nimport Notiflix from 'notiflix';\n\n//^  Add consts\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\n//^Add EventListener to form\nform.addEventListener('submit', onFormSubmit);\n\n//^ Add Functions \nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\nif (delay.value <= 0 || step.value <= 0 || amount.value <= 0) {\n    return Notiflix.Report.warning(\n      'The number must be greater than 0',\n      'Try again'\n    );\n}\n  \n  let delayTime = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    let id = i;\n\n    createPromise(id, delayTime)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delayTime += Number(step.value);\n  }\n\n  e.target.reset();\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefault","value","$parcel$interopDefault","Report","warning","delayTime","Number","i","then","param","delay2","Notify","success","concat","catch","delay3","failure","target","reset"],"version":3,"file":"03-promises.b3a74bd4.js.map"}