{"mappings":"qhBAEA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAMtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAbbR,EAAKiB,iBAAiB,UAiBtB,SAAsBC,GAEtB,GADEA,EAAEC,iBACAhB,EAAMiB,OAAS,GAAKhB,EAAKgB,OAAS,GAAKf,EAAOe,OAAS,EACvD,OAAOC,EAAAvB,GAASwB,OAAOC,QACrB,oCACA,aAIJ,IAAIC,EAAYC,OAAOtB,EAAMiB,OAE7B,IAAK,IAAIM,EAAI,EAAGA,GAAKrB,EAAOe,MAAOM,GAAK,EAAG,CAGzCpB,EAFSoB,EAESF,GACfG,MAAK,EAACpB,SAAEA,EAAUS,MAAAY,MACjBP,EAAAvB,GAAS+B,OAAOC,QACd,uBAAqBvB,QAAiBqB,MAAU,IAGnDG,OAAM,EAACxB,SAAEA,EAAUS,MAAAgB,MAClBX,EAAAvB,GAAS+B,OAAOI,QACd,sBAAoB1B,QAAeyB,MAAU,IAInDR,GAAaC,OAAOrB,EAAKgB,M,CAG3BF,EAAEgB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["//^ Add imports\n//* Add library for displaying messages to the user \nimport Notiflix from 'notiflix';\n\n//^  Add consts\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\n//^Add EventListener to form\nform.addEventListener('submit', onFormSubmit);\n\n//^ Add Functions \nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\nif (delay.value <= 0 || step.value <= 0 || amount.value <= 0) {\n    return Notiflix.Report.warning(\n      'The number must be greater than 0',\n      'Try again'\n    );\n}\n  \n  let delayTime = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    let id = i;\n\n    createPromise(id, delayTime)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delayTime += Number(step.value);\n  }\n\n  e.target.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefault","value","$parcel$interopDefault","Report","warning","delayTime","Number","i","then","delay2","Notify","success","catch","delay3","failure","target","reset"],"version":3,"file":"03-promises.ef6d1229.js.map"}